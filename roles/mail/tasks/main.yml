---
  - name: Stop and remove container
    shell: >
      /usr/bin/docker stop dovecot
    ignore_errors: true
    tags:
      - stop

  - name: Make sure docker is running
    service:
      name: docker
      state: started
    tags:
      - create
      - start
      - restart

  - name: Create /var/vmail if not exists
    file:
      path: /var/vmail
      state: directory
      mode: 0755
    tags:
      - create

  - name: Export mailaddrs to file
    template: src=mailaddr.j2 dest=/var/vmail/mailaddr
    tags:
      - create
      - start
      - stop
      - restart

  - name: Make sure smtp not start
    service: name=exim4 state=stopped
    ignore_errors: yes
    tags:
      - create

  - name: Remove container (when need rebuild)
    shell: >
      /usr/bin/docker stop dovecot && /usr/bin/docker rm -f dovecot
    tags:
      - rebuild

  - name: Create container
    shell: >
      /usr/bin/docker run -d
      --name dovecot
      -p 933:933
      -p 587:587
      -p 25:25
      -p 2525:2525
      -p 465:465
      -v /var/vmail:/home/vmail
      -v /var/vmail/log:/var/log
      -v /var/vmail/opendkim:/etc/opendkim
      -e "MAILNAME={{ mailname }}"
      -e "TZ=Asia/Taipei"
      --restart=unless-stopped
      netivism/docker-postfix-dovecot
    tags:
      - create

  - name: restart container
    shell: >
      /usr/bin/docker restart dovecot
    ignore_errors: true
    tags:
      - restart
      - start

  - name: Wait for service startup
    wait_for: port=587 delay=10
    tags:
      - create
      - start
      - restart

  - name: Save mail account and password into vmail_json
    fetch: src=/var/vmail/tmp/vmail_json dest=/etc/ansible/target/{{ inventory_hostname }}/vmail_json flat=yes
    tags:
      - create
      - start
      - restart

  - name: Save DKIM key into vmail_dkim
    fetch: src=/var/vmail/tmp/vmail_dkim dest=/etc/ansible/target/{{ inventory_hostname }}/vmail_dkim flat=yes
    tags:
      - create
      - start
      - restart

  - name: Create site's smtp configuration file
    stat: path=/var/www/sites/{{ domain }}/sites/default/smtp.settings.php
    register: smtpsettings
    tags:
      - site-setting

  - template: src=smtp.settings.php.j2 dest=/var/www/sites/{{ domain }}/sites/default/smtp.settings.php
    when: smtpsettings.stat.exists == False
    tags:
      - site-setting

  - stat: path=/var/www/sites/{{ domain }}/sites/default/settings.php
    register: settings
    tags:
      - site-setting

  - name: Include smtp conf into drupal settings file
    lineinfile:
      dest="/var/www/sites/{{ domain }}/sites/default/settings.php"
      regexp=""
      line="if(is_file(dirname(__FILE__).'/smtp.settings.php')){ @include_once('smtp.settings.php'); }"
      insertafter=EOF
    when: settings.stat.exists == True
    tags:
      - site-setting

  - name: Setup site wide mail info
    shell: cd /var/www/sites/{{ domain }} && drush neticrm-set-domain
    ignore_errors: yes
    tags:
      - site-setting

  - name: Send welcome mail
    shell: cd /var/www/sites/{{ domain }} && drush neticrm-welcome-mail
    ignore_errors: yes
    tags:
      - welcome

  - name: re-generate passwd
    shell: >
      /usr/bin/docker exec -i dovecot bash -c "regenpasswd.sh {{ domain }}"
    register: passwd
    tags:
      - passwd
  - debug: var=passwd.stdout_lines
    tags:
      - passwd

  - name: remove mail account
    shell: >
      /usr/bin/docker exec -i dovecot bash -c "removemail.sh {{ domain }}"
    tags:
      - remove
