# static to dynamic routing for drupal
location = /rss.xml {
  set $drupal_args 'rss.xml';
  try_files $uri @backend;
}

location = /sitemap.xml {
  set $drupal_args 'sitemap.xml';
  try_files $uri @backend;
}

# special case for drupal 6, force QUERY_STRING empty when access front page
location = / {
  # boost detect
  if ( $request_method !~ GET ) {
    return 405;
  }
  if ($http_cookie ~ "DRUPAL_UID") {
    return 405;
  }
  error_page 405 = @backend_noquery;

  add_header    Cache-Control  private;
  add_header X-Header "Boost";
  try_files /cache/normal/$host${uri}_$args.html @backend_noquery;
}

# allow live check
location = /live/live.php {
  fastcgi_pass 127.0.0.1:$port;
  include /etc/nginx/include/global_fastcgi;
}

location / {
  # allowed
  # index.php
  # module statistics for d7
  # civicrm external open click detect php
  location ~ (^/index.php|modules/statistics/statistics\.php|civicrm/extern/.+\.php)$ {
    include /etc/nginx/include/limit_req.conf;
    fastcgi_pass   127.0.0.1:$port;
    include /etc/nginx/include/global_fastcgi;
  }

  # deny access to drupal files
  location ~ (INSTALL\.txt|INSTALL\.*\.txt|CHANGELOG\.txt|phpmyadmin|UPGRADE\.txt|README\.txt|install\.php|update\.php|cron\.php) {
    return 404;
  }

  # allow for custom
  location ~* /files/civicrm/(custom|persist)/ {
    allow all;
    try_files $uri 404;
  }

  # deny for civicrm
  location ~* /files/civicrm/ {
    return 404;
  }

  # no for private
  location ~* /files/private/ {
    internal;
  }

  location ^~ /system/files/ {
    try_files $uri @backend;
    log_not_found off;
  }

  ## If accessing an image generated by Drupal 7 image style , serve it
  ## directly if available, if not relay the request to Drupal to (re)generate
  ## the image.
  location ~* ^/(sites/[^/]+/files/?.*?(styles|imagecache)/.*$) {
    access_log off;
    set $drupal_args $1;
    expires 30d;
    try_files $uri @backend;
  }

  # allow for other files
  location ~* /sites/.+/files/ {
    try_files $uri 404;
  }

  # image
  location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|woff|ttf|swf|svg)$ {
    access_log off;
    expires 30d;
    ## No need to bleed constant updates. Send the all shebang in one
    ## fell swoop.
    tcp_nodelay off;
    ## Set the OS file cache.
    open_file_cache max=3000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
    ## ETag support. This requires an Nginx version >= 1.3.3.
    etag on;
  }

  # secure all other drupal directory
  location ~* ^/(themes(/.*)?|modules(/.*)?|includes(/.*)?|sites|sites/[^/]*/.+\.php|sites/all/(modules|themes)(/[^/]*)?(/[^/]*)?|sites/(.*)/(modules|themes)(/[^/]*)?(/[^/]*)?)/?$ {
    return 404;
  }

  ## Replicate the Apache <FilesMatch> directive of Drupal standard
  ## .htaccess. Disable access to any code files. Return a 404 to curtail
  ## information disclosure. Hide also the text files.
  location ~* ^(.*)(?:.+\.(?:htaccess|make|engine|inc|info|install|module|po|sh|.*sql|sql\.gz|test|theme|tpl(?:\.php)?|xtmpl|patch|php)|code-style\.pl|/Entries.*|/Repository|/Root)$ {
    return 404;
  }

  # with boost
  location ~* ^/(.*)$ {
    set $drupal_args $1;  
    try_files $uri /$uri @cache;
  }
  try_files $uri /$uri @cache;

  # without boost 
  # try_files $uri /$uri @backend;
}

location @cache {
  if ( $request_method !~ GET ) {
    return 405;
  }
  if ($http_cookie ~ "DRUPAL_UID") {
    return 405;
  }
  error_page 405 = @backend;

  add_header    Cache-Control  private;
  add_header X-Header "Boost";
  try_files /cache/normal/$host${uri}_$args.html @backend;
}

location @backend {
  include /etc/nginx/include/limit_req.conf;
  fastcgi_pass   127.0.0.1:$port;
  include /etc/nginx/include/global_fastcgi;
  fastcgi_param  SCRIPT_FILENAME /var/www/html/index.php;
  fastcgi_param  SCRIPT_NAME /index.php;
  fastcgi_param  QUERY_STRING q=$drupal_args&$query_string;
}

location @backend_noquery {
  include /etc/nginx/include/limit_req.conf;
  fastcgi_pass   127.0.0.1:$port;
  include /etc/nginx/include/global_fastcgi;
  fastcgi_param  SCRIPT_FILENAME /var/www/html/index.php;
  fastcgi_param  SCRIPT_NAME /index.php;
}
